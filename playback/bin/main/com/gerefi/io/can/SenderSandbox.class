// Source code is decompiled from a .class file using FernFlower decompiler.
package com.gerefi.io.can;

import java.net.URISyntaxException;
import org.jetbrains.annotations.NotNull;

public class SenderSandbox {
   public SenderSandbox() {
      throw new Error("Unresolved compilation problems: \n\tThe declared package \"com.gerefi.io.can\" does not match the expected package \"com.gerefi.io.can\"\n\tThe import com.gerefi cannot be resolved\n\tThe import com.gerefi cannot be resolved\n\tThe import com.gerefi cannot be resolved\n\tThe import peak cannot be resolved\n\tCANPacket cannot be resolved to a type\n\tCANLineReader cannot be resolved\n\tCanPacketSender cannot be resolved\n\tHackLoadLibraryFlag cannot be resolved to a variable\n");
   }

   public static void main(String[] var0) throws Exception {
      throw new Error("Unresolved compilation problems: \n\tCANPacket cannot be resolved to a type\n\tCANLineReader cannot be resolved\n\tCanPacketSender cannot be resolved\n");
   }

   public static @NotNull CanSender create() {
      throw new Error("Unresolved compilation problem: \n\tHackLoadLibraryFlag cannot be resolved to a variable\n");
   }

   private static @NotNull String getFullResourceFileName(String var0) throws URISyntaxException {
      throw new Error("Unresolved compilation problem: \n");
   }

   private static String getOsName() {
      throw new Error("Unresolved compilation problem: \n");
   }

   private static boolean isWindows() {
      throw new Error("Unresolved compilation problem: \n");
   }
}
